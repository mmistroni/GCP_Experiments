# This Dockerfile illustrates how to use a custom base image when building
# a custom contaier images for Dataflow. A 'slim' base image is smaller in size,
# but does not include some preinstalled libraries, like google-cloud-debugger.
# To use a standard image, use apache/beam_python3.11_sdk:2.54.0 instead.
# Use consistent versions of Python interpreter in the project.
FROM python:3.11-slim

# Copy SDK entrypoint binary from Apache Beam image, which makes it possible to
# use the image as SDK container image. If you explicitly depend on
# apache-beam in setup.py, use the same version of Beam in both files.
COPY --from=apache/beam_python3.11_sdk:2.54.0 /opt/apache/beam /opt/apache/beam

# Copy Flex Template launcher binary from the launcher image, which makes it
# possible to use the image as a Flex Template base image.
COPY --from=gcr.io/dataflow-templates-base/python311-template-launcher-base:20230622_RC00 /opt/google/dataflow/python_template_launcher /opt/google/dataflow/python_template_launcher

ARG WORKDIR=/template
WORKDIR ${WORKDIR}
RUN mkdir -p ${WORKDIR}
RUN mkdir -p ${WORKDIR}/src
RUN mkdir -p ${WORKDIR}/src/modules


COPY pyproject.toml ./pyproject.toml
COPY __init__.py ${WORKDIR}/__init__.py
COPY modules  ${WORKDIR}/src/modules
COPY edgar_daily_main.py ${WORKDIR}/edgar_daily_main.py


RUN pwd
RUN echo '----- listing workdir'
RUN ls -la ${WORKDIR}
RUN echo '---- LISTING moduls-----'
RUN ls -la ${WORKDIR}/src/modules
RUN echo 'Dockerfile completed'

RUN echo '----- INSTALLING REQS ----'
RUN pip install -e .

# Super important to add these lines.
ENV FLEX_TEMPLATE_PYTHON_PY_FILE="${WORKDIR}/edgar_daily_main.py"

RUN pip check
# Optionally, list all installed dependencies.
# The output can be used to seed requirements.txt for reproducible builds.
RUN pip freeze
# Set the entrypoint to Apache Beam SDK launcher, which allows this image
# to be used as an SDK container image.
ENTRYPOINT ["/opt/apache/beam/boot"]

